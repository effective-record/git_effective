-- MySQL Script generated by MySQL Workbench
-- Wed Mar  3 12:59:12 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema effective
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema effective
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `effective` DEFAULT CHARACTER SET utf8 ;
USE `effective` ;

-- -----------------------------------------------------
-- Table `effective`.`CATEGORIA_PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`CATEGORIA_PRODUCTO` (
  `id_categoria_producto` INT NOT NULL AUTO_INCREMENT,
  `nombre_categoria_producto` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_categoria_producto`));


-- -----------------------------------------------------
-- Table `effective`.`FORMAS_DE_PAGO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`FORMAS_DE_PAGO` (
  `id_forma_de_pago` INT NOT NULL AUTO_INCREMENT,
  `tipo_de_pago` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_forma_de_pago`));


-- -----------------------------------------------------
-- Table `effective`.`TIPO_DE_DOCUMENTO_CONTABLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`TIPO_DE_DOCUMENTO_CONTABLE` (
  `id_tipo_de_documento_contable` INT NOT NULL AUTO_INCREMENT,
  `codigo` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(20) NOT NULL,
  `naturaleza` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_tipo_de_documento_contable`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `effective`.`TIPO_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`TIPO_USUARIO` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `descripcion_tipo_usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`));


-- -----------------------------------------------------
-- Table `effective`.`ESTADO_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`ESTADO_USUARIO` (
  `id_estado_usuario` INT NOT NULL AUTO_INCREMENT,
  `descripcion_estado_usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_estado_usuario`));


-- -----------------------------------------------------
-- Table `effective`.`GENERO_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`GENERO_USUARIO` (
  `id_genero_usuario` INT NOT NULL AUTO_INCREMENT,
  `descripcion_genero_usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_genero_usuario`));


-- -----------------------------------------------------
-- Table `effective`.`TIPO_DOC_IDENTIFICACION_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`TIPO_DOC_IDENTIFICACION_USUARIO` (
  `id_doc_identificacion_usuario` INT NOT NULL AUTO_INCREMENT,
  `tipo_doc_identificacion_usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_doc_identificacion_usuario`));


-- -----------------------------------------------------
-- Table `effective`.`USUARIOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`USUARIOS` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombres_usuario` VARCHAR(50) NOT NULL,
  `apellidos_usuario` VARCHAR(50) NOT NULL,
  `identificacion_usuario` VARCHAR(50) NOT NULL,
  `clave` VARCHAR(50) NOT NULL,
  `telefono_usuario` VARCHAR(20) NOT NULL,
  `direccion_usuario` VARCHAR(50) NOT NULL,
  `correo_usuario` VARCHAR(50) NOT NULL,
  `TIPO_USUARIO_id_tipo_usuario` INT NOT NULL,
  `ESTADO_USUARIO_id_estado_usuario` INT NOT NULL,
  `GENERO_USUARIO_id_genero_usuario` INT NOT NULL,
  `TIPO_DOC_IDENTIFICACION_USUARIO_id_doc_identificacion_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `identificacionUsuario_UNIQUE` (`identificacion_usuario` ASC) VISIBLE,
  INDEX `fk_USUARIOS_TIPO_USUARIO1_idx` (`TIPO_USUARIO_id_tipo_usuario` ASC) VISIBLE,
  INDEX `fk_USUARIOS_ESTADO_USUARIO1_idx` (`ESTADO_USUARIO_id_estado_usuario` ASC) VISIBLE,
  INDEX `fk_USUARIOS_GENERO_USUARIO1_idx` (`GENERO_USUARIO_id_genero_usuario` ASC) VISIBLE,
  INDEX `fk_USUARIOS_TIPO_DOC_IDENTIFICACION_USUARIO1_idx` (`TIPO_DOC_IDENTIFICACION_USUARIO_id_doc_identificacion_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_USUARIOS_TIPO_USUARIO1`
    FOREIGN KEY (`TIPO_USUARIO_id_tipo_usuario`)
    REFERENCES `effective`.`TIPO_USUARIO` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIOS_ESTADO_USUARIO1`
    FOREIGN KEY (`ESTADO_USUARIO_id_estado_usuario`)
    REFERENCES `effective`.`ESTADO_USUARIO` (`id_estado_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIOS_GENERO_USUARIO1`
    FOREIGN KEY (`GENERO_USUARIO_id_genero_usuario`)
    REFERENCES `effective`.`GENERO_USUARIO` (`id_genero_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIOS_TIPO_DOC_IDENTIFICACION_USUARIO1`
    FOREIGN KEY (`TIPO_DOC_IDENTIFICACION_USUARIO_id_doc_identificacion_usuario`)
    REFERENCES `effective`.`TIPO_DOC_IDENTIFICACION_USUARIO` (`id_doc_identificacion_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `effective`.`INVENTARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`INVENTARIO` (
  `id_inventario` INT NOT NULL AUTO_INCREMENT,
  `entradas` INT(10) NOT NULL,
  `salidas` INT(10) NOT NULL,
  `saldo` INT(10) NOT NULL,
  PRIMARY KEY (`id_inventario`));


-- -----------------------------------------------------
-- Table `effective`.`MOVIMIENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`MOVIMIENTO` (
  `id_movimiento` INT NOT NULL AUTO_INCREMENT,
  `numero_de_documento` VARCHAR(50) NOT NULL,
  `fecha` VARCHAR(10) NOT NULL,
  `subtotal` INT(7) NOT NULL,
  `total_iva` INT(7) NOT NULL,
  `total_factura` INT(7) NOT NULL,
  `FORMAS_DE_PAGO_id_forma_de_pago` INT NOT NULL,
  `TIPO_DE_DOCUMENTO_CONTABLE_id_tipo_de_documento_contable` INT NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  `INVENTARIO_id_inventario` INT NOT NULL,
  PRIMARY KEY (`id_movimiento`),
  INDEX `fk_MOVIMIENTO_FORMAS_DE_PAGO1_idx` (`FORMAS_DE_PAGO_id_forma_de_pago` ASC) VISIBLE,
  INDEX `fk_MOVIMIENTO_TIPO_DE_DOCUMENTO_CONTABLE1_idx` (`TIPO_DE_DOCUMENTO_CONTABLE_id_tipo_de_documento_contable` ASC) VISIBLE,
  INDEX `fk_MOVIMIENTO_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  INDEX `fk_MOVIMIENTO_INVENTARIO1_idx` (`INVENTARIO_id_inventario` ASC) VISIBLE,
  CONSTRAINT `fk_MOVIMIENTO_FORMAS_DE_PAGO1`
    FOREIGN KEY (`FORMAS_DE_PAGO_id_forma_de_pago`)
    REFERENCES `effective`.`FORMAS_DE_PAGO` (`id_forma_de_pago`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MOVIMIENTO_TIPO_DE_DOCUMENTO_CONTABLE1`
    FOREIGN KEY (`TIPO_DE_DOCUMENTO_CONTABLE_id_tipo_de_documento_contable`)
    REFERENCES `effective`.`TIPO_DE_DOCUMENTO_CONTABLE` (`id_tipo_de_documento_contable`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MOVIMIENTO_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `effective`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MOVIMIENTO_INVENTARIO1`
    FOREIGN KEY (`INVENTARIO_id_inventario`)
    REFERENCES `effective`.`INVENTARIO` (`id_inventario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `effective`.`PROVEEDORES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`PROVEEDORES` (
  `id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `identificacion_proveedor` VARCHAR(50) NOT NULL,
  `nombre_proveedor` VARCHAR(50) NOT NULL,
  `correo_proveedor` VARCHAR(50) NOT NULL,
  `direccion_proveedor` VARCHAR(50) NOT NULL,
  `telefono_1_proveedor` VARCHAR(20) NOT NULL,
  `telefono_2_proveedor` VARCHAR(20) NULL,
  PRIMARY KEY (`id_proveedor`));


-- -----------------------------------------------------
-- Table `effective`.`ESTADO_PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`ESTADO_PRODUCTO` (
  `id_estado_producto` INT NOT NULL AUTO_INCREMENT,
  `descripcion_estado_producto` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_estado_producto`));


-- -----------------------------------------------------
-- Table `effective`.`MARCA_PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`MARCA_PRODUCTO` (
  `id_marca_producto` INT NOT NULL AUTO_INCREMENT,
  `nombre_marca_producto` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_marca_producto`));


-- -----------------------------------------------------
-- Table `effective`.`UNIDAD_DE_MEDIDA_PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`UNIDAD_DE_MEDIDA_PRODUCTO` (
  `id_unidad_de_medida_producto` INT NOT NULL AUTO_INCREMENT,
  `descripcion_unidad_de_medida_producto` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_unidad_de_medida_producto`));


-- -----------------------------------------------------
-- Table `effective`.`PRODUCTOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`PRODUCTOS` (
  `id_producto` INT ZEROFILL NOT NULL AUTO_INCREMENT,
  `identificacion_producto` VARCHAR(45) NOT NULL,
  `nombre_producto` VARCHAR(50) NOT NULL,
  `precio_producto` INT(7) NOT NULL,
  `descripcion_producto` VARCHAR(50) NOT NULL,
  `cantidad_producto` INT(3) NOT NULL,
  `iva_producto` INT(7) NOT NULL,
  `PROVEEDORES_id_proveedor` INT NOT NULL,
  `CATEGORIA_PRODUCTO_id_categoria_producto` INT NOT NULL,
  `ESTADO_PRODUCTO_id_estado_producto` INT NOT NULL,
  `MARCA_PRODUCTO_id_marca_producto` INT NOT NULL,
  `UNIDAD_DE_MEDIDA_PRODUCTO_id_unidad_de_medida_producto` INT NOT NULL,
  `INVENTARIO_id_inventario` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_PRODUCTOS_PROVEEDORES1_idx` (`PROVEEDORES_id_proveedor` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_CATEGORIA_PRODUCTO1_idx` (`CATEGORIA_PRODUCTO_id_categoria_producto` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_ESTADO_PRODUCTO1_idx` (`ESTADO_PRODUCTO_id_estado_producto` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_MARCA_PRODUCTO1_idx` (`MARCA_PRODUCTO_id_marca_producto` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_UNIDAD_DE_MEDIDA_PRODUCTO1_idx` (`UNIDAD_DE_MEDIDA_PRODUCTO_id_unidad_de_medida_producto` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_INVENTARIO1_idx` (`INVENTARIO_id_inventario` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCTOS_PROVEEDORES1`
    FOREIGN KEY (`PROVEEDORES_id_proveedor`)
    REFERENCES `effective`.`PROVEEDORES` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_CATEGORIA_PRODUCTO1`
    FOREIGN KEY (`CATEGORIA_PRODUCTO_id_categoria_producto`)
    REFERENCES `effective`.`CATEGORIA_PRODUCTO` (`id_categoria_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_ESTADO_PRODUCTO1`
    FOREIGN KEY (`ESTADO_PRODUCTO_id_estado_producto`)
    REFERENCES `effective`.`ESTADO_PRODUCTO` (`id_estado_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_MARCA_PRODUCTO1`
    FOREIGN KEY (`MARCA_PRODUCTO_id_marca_producto`)
    REFERENCES `effective`.`MARCA_PRODUCTO` (`id_marca_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_UNIDAD_DE_MEDIDA_PRODUCTO1`
    FOREIGN KEY (`UNIDAD_DE_MEDIDA_PRODUCTO_id_unidad_de_medida_producto`)
    REFERENCES `effective`.`UNIDAD_DE_MEDIDA_PRODUCTO` (`id_unidad_de_medida_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_INVENTARIO1`
    FOREIGN KEY (`INVENTARIO_id_inventario`)
    REFERENCES `effective`.`INVENTARIO` (`id_inventario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `effective`.`DETALLE_MOVIMIENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `effective`.`DETALLE_MOVIMIENTO` (
  `id_detalle_movimiento` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT(3) NOT NULL,
  `precio_productos` DOUBLE NOT NULL,
  `iva_productos` DOUBLE NOT NULL,
  `total_productos` DOUBLE NOT NULL,
  `MOVIMIENTO_id_movimiento` INT NOT NULL,
  `PRODUCTOS_id_producto` INT NOT NULL,
  PRIMARY KEY (`id_detalle_movimiento`),
  INDEX `fk_DETALLE_MOVIMIENTO_MOVIMIENTO1_idx` (`MOVIMIENTO_id_movimiento` ASC) VISIBLE,
  INDEX `fk_DETALLE_MOVIMIENTO_PRODUCTOS1_idx` (`PRODUCTOS_id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_DETALLE_MOVIMIENTO_MOVIMIENTO1`
    FOREIGN KEY (`MOVIMIENTO_id_movimiento`)
    REFERENCES `effective`.`MOVIMIENTO` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DETALLE_MOVIMIENTO_PRODUCTOS1`
    FOREIGN KEY (`PRODUCTOS_id_producto`)
    REFERENCES `effective`.`PRODUCTOS` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
